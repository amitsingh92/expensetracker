/*
 * File: app/view/AddCategory.js
 *
 * This file was generated by Sencha Architect version 3.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ExpenseTracker.view.AddCategory', {
    extend: 'Ext.Container',
    alias: 'widget.addcategory',

    config: {
        height: '100%',
        width: '100%',
        items: [
            {
                xtype: 'formpanel',
                height: '100%',
                itemId: 'addcategoryform',
                layout: {
                    type: 'fit'
                },
                items: [
                    {
                        xtype: 'hiddenfield',
                        itemId: 'id',
                        name: 'id'
                    },
                    {
                        xtype: 'textfield',
                        itemId: 'name',
                        label: 'Name',
                        labelWrap: true,
                        name: 'name',
                        required: true,
                        placeHolder: 'Enter Category Name'
                    },
                    {
                        xtype: 'textfield',
                        itemId: 'price',
                        label: 'Price',
                        labelWrap: true,
                        name: 'price',
                        required: true,
                        placeHolder: 'Enter Price'
                    },
                    {
                        xtype: 'button',
                        handler: function(button, e) {
                            var formObj = button.up('formpanel');
                            var formData = formObj.getValues();
                            var formTypeAdd = true;
                            if(formData.id === '') {//add form

                                var category = Ext.create('ExpenseTracker.model.Category',{
                                    name: formData.name,
                                    price: formData.price
                                });

                            } else {//edit form

                                formTypeAdd = false;
                                var category = Ext.getStore('Categories').getById(formData.id);
                                category.set('name', formData.name);
                                category.set('price', formData.price);
                            }


                            var errs = category.validate();
                            var msg = '';

                            if (!errs.isValid()) {
                                errs.each(function (err) {
                                    msg += err.getField() + ' : ' + err.getMessage() + '<br/>';
                                });

                                Ext.Msg.alert('ERROR', msg);

                            } else {

                                if(formTypeAdd){
                                    Ext.getStore('Categories').add(category);
                                }
                                Ext.getStore('Categories').sync();
                                Ext.Msg.alert('SUCCESS', 'Category saved successfully');

                                Ext.Viewport.setActiveItem({
                                    xtype : 'tabpanel'
                                });
                            }
                        },
                        itemId: 'save',
                        style: 'position:relative;width:50%;float:left;',
                        iconAlign: 'center',
                        text: 'Save'
                    },
                    {
                        xtype: 'button',
                        handler: function(button, e) {

                            var formObj = button.up('formpanel');
                            var formData = formObj.getValues();

                            var id = formData.id;
                            record = Ext.getStore('Categories').getById(id);

                            if(record === null || record === undefined){
                                Ext.Msg.alert('Error', 'Category remove fails');
                            }

                            //record.phantom = true;

                            Ext.Msg.confirm('DELETE CONFIRM', 'Are you sure you want to delete?', function (btn) {
                                if (btn === 'yes') {
                                    Ext.getStore('Categories').remove(record);
                                    Ext.getStore('Categories').sync();
                                    Ext.Msg.alert('SUCCESS', 'Category removed successfully');

                                    Ext.Viewport.setActiveItem({
                                        xtype : 'tabpanel'
                                    });

                                } // switch
                            }); // confirm()

                        },
                        hidden: true,
                        itemId: 'delete',
                        style: 'position:relative;width:50%;',
                        iconAlign: 'center',
                        text: 'Delete'
                    }
                ]
            },
            {
                xtype: 'titlebar',
                docked: 'top',
                ui: 'light',
                title: 'Add Category',
                items: [
                    {
                        xtype: 'button',
                        handler: function(button, e) {
                            Ext.Viewport.setActiveItem({
                                xtype : 'tabpanel'
                            });
                        },
                        text: 'Back'
                    }
                ]
            }
        ]
    }

});