/*
 * File: app/controller/Controller.js
 *
 * This file was generated by Sencha Architect version 3.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ExpenseTracker.controller.Controller', {
    extend: 'Ext.app.Controller',
    alias: 'controller.controller',

    config: {
        refs: {
            addCategoryForm: {
                autoCreate: true,
                selector: 'addcategoryform',
                xtype: 'addcategory'
            }
        },

        control: {
            "tabpanel  #categorylist": {
                itemtap: 'onListItemTap'
            },
            "tabpanel  #expenseList": {
                itemtap: 'onListItemTap1'
            },
            "addcategory #addcategoryform": {
                activate: 'onContainerInitialize1'
            },
            "addexpense #addexpenseform": {
                activate: 'onContainerActivate'
            },
            "datepickerfield[itemId=searchfield]": {
                change: 'onPickerChange'
            },
            "tabpanel #expenses": {
                activate: 'onContainerActivate1'
            }
        }
    },

    onListItemTap: function(dataview, index, target, record, e, eOpts) {

        var addcategory = Ext.widget('addcategory');

        var _addcategory = addcategory.query('#addcategoryform')[0];

        _addcategory.setRecord(record);

        _addcategory.query('#delete')[0].setHidden(false);

        Ext.Viewport.setActiveItem(addcategory);
    },

    onListItemTap1: function(dataview, index, target, record, e, eOpts) {

        var addcategory = Ext.widget('addexpense');

        var _addcategory = addcategory.query('#addexpenseform')[0];

        record.data.category = record.data.categoryid;

        console.log(record);

        _addcategory.setRecord(record);

        _addcategory.query('#delete')[0].setHidden(false);

        Ext.Viewport.setActiveItem(addcategory);
    },

    onContainerInitialize1: function(newActiveItem, container, oldActiveItem, eOpts) {
        var existing = container.down('#price').getLabel();
        existing = existing + ' (' + ExpenseTracker.util.Config.getCostSymbol() + ')';
        container.down('#price').setLabel(existing);

    },

    onContainerActivate: function(newActiveItem, container, oldActiveItem, eOpts) {
        var existing = container.down('#price').getLabel();
        existing = existing + ' (' + ExpenseTracker.util.Config.getCostSymbol() + ')';
        container.down('#price').setLabel(existing);
    },

    onPickerChange: function(picker, value, eOpts) {
        //console.log('call');
        //Ext.getStore('Expenses').clearFilter();
    },

    onContainerActivate1: function(newActiveItem, container, oldActiveItem, eOpts) {
        Ext.getStore('Expenses').clearFilter();

        var formData = ExpenseTracker.util.Config.getExpenseDate();

        if(formData === ''){
            formData = Ext.Date.format(new Date(), 'Y-m');
        }

        var frDate = formData+'-01',toDate = formData+'-31';
        //console.log(frDate);console.log(toDate);

        container.down('#searchfield').setValue(new Date(frDate));

        var costSymbol = ExpenseTracker.util.Config.getCostSymbol();
        var totalamount = ExpenseTracker.util.Config.getTotalCategoryPrice();
        var balanceamount = ExpenseTracker.util.Config.getBalanceExpenseByDate(frDate, toDate, totalamount);

        var compSum = container.down('#totalsummary');
        var compHtml = '<div style="float:left;width:100%;">Total Amount<div style="float:right;">'+costSymbol+totalamount+'</div></div><div style="float:left;width:100%;">Balance Amount: <div style="float:right;">'+costSymbol+balanceamount+'</div></div>';
        compSum.setHtml(compHtml);

        Ext.getStore('Expenses').filterBy(function(item){
            var itemdate = item.get('date');
            itemdate = Ext.Date.format(itemdate, 'Y-m-d');
            //console.log(itemdate);
            if(itemdate >= frDate && itemdate <= toDate){
                return true;
            }
        });

    }

});